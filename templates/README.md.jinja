# {{ repo }}

Non-Python {{ content }} files needed for the {{ type }} {{ name }} packaged
into a Python module so they can be used with Python libraries and tools.

This is useful for usage with tools like
[LiteX](https://github.com/enjoy-digital/litex.git).

The data files can be found under the Python module `{{ py }}`. The
`{{ py }}.data_location` value can be used to find the files on the file
system.

Example of getting the data file directly;
```python
import {{ py }}

my_data_file = "abc.txt"

with open(os.path.join({{ py }}.data_location, my_data_file)) as f:
    print(f.read())
```

Example of getting the data file using `litex.data.find` API;
```python
from {{ py }} import data_file

my_data_file = "abc.txt"

with open(data_file(my_data_file)) as f:
    print(f.read())
```

{% if src %}
The data files come from {{ src }}
and are imported using `git subtrees` to the directory
[{{ dir }}]({{ dir }}).
{% endif %}
{% if gen_src %}
The data files are generated from {{ gen_src }} and place in the directory
[{{ dir }}]({{ dir }}).
{% endif %}

# Installing

## Directly from git repository

### Manually

You can install the package manually, however this is **not** recommended.

```
git clone {{ repo_https }}
cd {{ repo }}
sudo python setup.py install
```

### Using [pip](https://pip.pypa.io/) with git repository

You can use [pip](https://pip.pypa.io/) to install the data package directly
from github using;

```
pip install --user git+{{ repo_https }}
```

If you want to install for the whole system rather than just the current user,
you need to remove the `--user` argument and run as sudo like so;

```
sudo pip install git+{{ repo_https }}
```

You can install a specific revision of the repository using;
```
pip install --user git+{{ repo_https }}@<tag>
pip install --user git+{{ repo_https }}@<branch>
pip install --user git+{{ repo_https }}@<hash>
```

### With `requirements.txt` file

Add to your Python `requirements.txt` file using;
```
-e git+{{ repo_https }}
```

To use a specific revision of the repository, use the following;
```
-e {{ repo_https }}@<hash>
```

## Via [PyPi](https://pypi.org/project/{{ repo }}/)

### Using [pip](https://pip.pypa.io/)

```
pip install --user pythondata-{{ type }}-{{ name }}
```

### With `requirements.txt` file

Add to your Python `requirements.txt` file using;
```
{{ repo }}
```

# Issues and Fixes

This package is autogenerated from the sources in
{% if src %}<{{ src }}>{% endif %}{% if gen_src %}<{{ gen_src }}>{% endif %}
using the [pythondata-auto](https://github.com/litex-hub/pythondata-auto)
toolset. Pull requests and issues on this pythondata repo may not be monitored.

